<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-kit-instantmessenger-01" ipr="full3667">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="Instant Messenger System">Instant Messenger System</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Projektgruppe 1" initials="P1" role="editor">
      <organization>Karlsruhe Institute of Technology</organization>

      <address>
        <postal>
          <street></street>

          <!-- Reorder these if your country does things differently -->

          <city>Karlsruhe</city>

          <region>Baden-Württemberg</region>

          <code></code>

          <country>DE</country>
        </postal>

        <phone></phone>

        <email>tm-projekt5@ira.uka.de</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <date month="December" year="2011" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
     in the current day and month for you. If the year is not the current one, it is 
     necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
     purpose of calculating the expiry date).  With drafts it is normally sufficient to 
     specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
     If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>template</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>Specification for an Instant Messenger System.</t>
    </abstract>
  </front>

  <middle>
<section title="Introduction" anchor="introduction">
    <section title="Purpose" anchor="intro.purpose">
        <t>
            The "Instant Satisfaction by Obscure Unstable Protocol" (InstantSOUP) is an application-level protocol for local message exchange.
            The protocol was developed during a telematics project at Karlsruhe Institute of Technology (KIT) during the course of the winter semester 2011/2012.
            InstantSOUP is responsible for connecting the user to a lobby in his or her local area network.
            In this environment the user is able to interact with other participants and chat rooms.
            It provides basic chat functionality which is described thoroughly below in <xref target="intro.features"/>.
        </t>
        <t>
            The InstantSOUP protocol is divided into two major concepts, namely a lobby and a client-server architecture.
            The lobby allows the user to discover different users without explicitly joining a server.
            The client-server architecture, on the other hand, allows the user to host a server which ultimately offers
            different user-created channels on which other users can join and chat.
        </t>
    </section>
    <section title="Requirements" anchor="intro.requirements">
        <t>
            The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
            "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
            document are to be interpreted as described in RFC 2119 <xref target="RFC2119"/>.
        </t>
        <t>
            An implementation is not compliant if it fails to satisfy one or more
            of the MUST or REQUIRED level requirements for the protocols it
            implements. An implementation that satisfies all the MUST or REQUIRED
            level and all the SHOULD level requirements for its protocols is said
            to be "unconditionally compliant"; one that satisfies all the MUST
            level requirements but not all the SHOULD level requirements for its
            protocols is said to be "conditionally compliant."
        </t>
    </section>
    <section title="Features" anchor="intro.features">
        <t>
            The protocol is able to:
        </t>
        <t>
            <list style="format (%d)">
                <t>
                    find other users
                </t>
                <t>
                    find other channels
                </t>
                <t>
                    send pieces of information about channels and users
                </t>
                <t>
                    create channels
                </t>
                <t>
                    close channels
                </t>
                <t>
                    let users join a channel
                </t>
                <t>
                    let users leave a channel
                </t>
                <t>
                    allow users to be in more than one channel
                </t>
                <t>
                    set a pseudonym for client and/or server
                </t>
                <t>
                    invite users to a private channel
                </t>
                <t>
                    receive invites from other users
                </t>
                <t>
                    send messages to a channel
                </t>
                <t>
                    receive messages from a channel
                </t>
                <t>
                    recognize if users or channels have timed out
                </t>
                <t>
                    work nearly without any informational data loss
                </t>
            </list>
        </t>
        <t>
            The protocol is extendable to:
        </t>
        <t>
            <list style="format (%d)">
                <t>
                    other message formats
                </t>
                <t>
                    other types of data exchange
                </t>
                <t>
                    additional server/client commands
                </t>
            </list>
        </t>
    </section>
    <section title="Terminology" anchor="intro.terminology">
        <t>
            This specification uses a number of terms to refer to the roles
            played by participants in, and objects of, InstantSOUP.
        </t>
        <t>
            <iref item="node"/>
            Node
            <list>
                <t>
                    A computer system connected to a communication network (MUST be a local area network).
                </t>
            </list>
        </t>
        <t>
            <iref item="user"/>
            User
            <list>
                <t>
                    A real person. He MAY trigger actions in the network which MAY trigger reactions.
                </t>
            </list>
        </t>
        <t>
            <iref item="peer"/>
            Peer
            <list>
                <t>
                    A piece of software which runs on a node. It MUST implement the InstantSOUP protocol as well
                    as it MUST have an unique identifier (MAY be an UUID as described in RFC 4122 or simply the
                    MAC address of the node).
                </t>
                <t>
                    It MAY have an interface for a user to interact with.
                </t>
                <t>
                    It MAY have a pseudonym.
                </t>
            </list>
        </t>
        <t>
            <iref item="client"/>
            Client
            <list>
                <t>
                    A peer which accepts services.
                </t>
                <t>
                    It SHOULD be able to let a user create, enter, leave and send messages to a channel.
                </t>
                <t>
                    It MAY be a member of multiple channels.
                </t>
            </list>
        </t>
        <t>
            <iref item="server"/>
            Server
            <list>
                <t>
                    A peer which offers services.
                </t>
                <t>
                    It MAY be the host for channels.
                </t>
            </list>
        </t>
        <t>
            <iref item="channel"/>
            Channel
            <list>
                <t>
                    A basic concept describing the interaction between clients. A channel MAY be created by
                    a user as a request to a server by a client. A channel MAY be private which means only
                    limited client members.
                </t>
                <t>
                    If a channel has no connected users, the lifetime of the channel depends on the implementation
                    of the server.
                </t>
            </list>
        </t>
        <t>
            <iref item="pdu"/>
            Protocol Data Unit
            <list>
                <t>
                    "Information that is delivered as a unit among peer entities of a network and that may contain
                    control information, address information, or data."
                    <eref target="http://en.wikipedia.org/w/index.php?title=Protocol_data_unit&amp;oldid=458223646">
                    (Protocol data unit - Wikipedia, The Free Encyclopedia)</eref>
                </t>
            </list>
        </t>
    </section>
</section>
<section anchor="Security" title="Security Considerations">
    <t></t>
</section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;

      <reference anchor="min_ref">
        <!-- the following is the minimum to make xml2rfc happy -->

        <front>
          <title>Minimal Reference</title>

          <author initials="authInitials" surname="authSurName">
            <organization></organization>
          </author>

          <date year="2006" />
        </front>
      </reference>
    </references>

    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. -->

      &RFC2629;

      &RFC3552;

      &I-D.narten-iana-considerations-rfc2434bis;

      <!-- A reference written by by an organization not a person. -->

      <reference anchor="DOMINATION"
                 target="http://www.example.com/dominator.html">
        <front>
          <title>Ultimate Plan for Taking Over the World</title>

          <author>
            <organization>Mad Dominators, Inc.</organization>
          </author>

          <date year="1984" />
        </front>
      </reference>
    </references>

    <section anchor="app-additional" title="Additional Stuff">
      <t>This becomes an Appendix.</t>
    </section>
  </back>
</rfc>
